<UserControl
    x:Class="PRPR.BooruViewer.Views.TabPostListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PRPR.BooruViewer.Views"
        xmlns:cc="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:CommonControl="using:PRPR.Common.Controls"
    xmlns:m="using:PRPR.BooruViewer.Models"
    xmlns:Extensions="using:PRPR.Common.Extensions"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">


    <UserControl.Resources>
        <Style x:Key="FlyoutFlyoutPresenterStyle1" TargetType="FlyoutPresenter">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Background" Value="{ThemeResource FlyoutPresenterBackground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource FlyoutBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource FlyoutBorderThemeThickness}"/>
            <Setter Property="Padding" Value="{ThemeResource FlyoutContentThemePadding}"/>
            <Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}"/>
            <Setter Property="MaxWidth" Value="{ThemeResource FlyoutThemeMaxWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource FlyoutThemeMinHeight}"/>
            <Setter Property="MaxHeight" Value="{ThemeResource FlyoutThemeMaxHeight}"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="FlyoutPresenter">
                        <Border BackgroundSizing="OuterBorderEdge" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" Padding="{ThemeResource FlyoutBorderThemePadding}" Margin="32,40,32,0">
                            
                            <ScrollViewer x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
            <Setter Property="TextLineBounds" Value="Full"/>
        </Style>
        <Style x:Key="CaptionTextBlockStyle" BasedOn="{StaticResource BaseTextBlockStyle}" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <Style x:Key="ToggleMenuFlyoutItemStyle1" TargetType="ToggleMenuFlyoutItem">
            <Setter Property="Background" Value="{ThemeResource ToggleMenuFlyoutItemRevealBackground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource ToggleMenuFlyoutItemRevealBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ToggleMenuFlyoutItemRevealBorderThickness}"/>
            <Setter Property="Foreground" Value="{ThemeResource ToggleMenuFlyoutItemForeground}"/>
            <Setter Property="Padding" Value="{ThemeResource MenuFlyoutItemThemePadding}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleMenuFlyoutItem">
                        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" Padding="{TemplateBinding Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="AnimationRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleMenuFlyoutItemRevealBackgroundPointerOver}"/>
                                            <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource ToggleMenuFlyoutItemRevealBorderBrushPointerOver}"/>
                                            <Setter Target="IconContent.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemForegroundPointerOver}"/>
                                            <Setter Target="TextBlock.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemForegroundPointerOver}"/>
                                            <Setter Target="CheckGlyph.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemCheckGlyphForegroundPointerOver}"/>
                                            <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="AnimationRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleMenuFlyoutItemRevealBackgroundPressed}"/>
                                            <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource ToggleMenuFlyoutItemRevealBorderBrushPressed}"/>
                                            <Setter Target="IconContent.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemForegroundPressed}"/>
                                            <Setter Target="TextBlock.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemForegroundPressed}"/>
                                            <Setter Target="CheckGlyph.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemCheckGlyphForegroundPressed}"/>
                                            <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="AnimationRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleMenuFlyoutItemRevealBackgroundDisabled}"/>
                                            <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource ToggleMenuFlyoutItemRevealBorderBrushDisabled}"/>
                                            <Setter Target="IconContent.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemForegroundDisabled}"/>
                                            <Setter Target="TextBlock.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemForegroundDisabled}"/>
                                            <Setter Target="CheckGlyph.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemCheckGlyphForegroundDisabled}"/>
                                            <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource ToggleMenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Checked">
                                        <VisualState.Setters>
                                            <Setter Target="CheckGlyph.Opacity" Value="1"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="UncheckedWithIcon">
                                        <VisualState.Setters>
                                            <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"/>
                                            <Setter Target="IconRoot.Visibility" Value="Visible"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckedWithIcon">
                                        <VisualState.Setters>
                                            <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"/>
                                            <Setter Target="IconRoot.Visibility" Value="Visible"/>
                                            <Setter Target="CheckGlyph.Opacity" Value="1"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PaddingSizeStates">
                                    <VisualState x:Name="DefaultPadding"/>
                                    <VisualState x:Name="NarrowPadding">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Padding">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemThemePaddingNarrow}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                    <VisualState x:Name="KeyboardAcceleratorTextCollapsed"/>
                                    <VisualState x:Name="KeyboardAcceleratorTextVisible">
                                        <VisualState.Setters>
                                            <Setter Target="KeyboardAcceleratorTextBlock.Visibility" Value="Visible"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="AnimationRoot">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <FontIcon x:Name="CheckGlyph" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource ToggleMenuFlyoutItemCheckGlyphForeground}" FontSize="16" Glyph="&#xE001;" Margin="0,0,12,0" Opacity="0" Width="16"/>
                                <Viewbox x:Name="IconRoot" Grid.Column="1" HorizontalAlignment="Left" Height="16" VerticalAlignment="Center" Visibility="Collapsed" Width="16">
                                    <ContentPresenter x:Name="IconContent" Content="{TemplateBinding Icon}"/>
                                </Viewbox>
                                <TextBlock x:Name="TextBlock" Grid.Column="1" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Text}" TextTrimming="Clip" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <TextBlock x:Name="KeyboardAcceleratorTextBlock" Grid.Column="2" Foreground="{ThemeResource ToggleMenuFlyoutItemKeyboardAcceleratorTextForeground}" HorizontalAlignment="Right" MinWidth="{Binding TemplateSettings.KeyboardAcceleratorTextMinWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="24,0,0,0" Style="{ThemeResource CaptionTextBlockStyle}" Text="{TemplateBinding KeyboardAcceleratorTextOverride}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>


    <Grid Padding="0,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <UserControl Grid.Row="1">
            <Grid>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="1200" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="BrowsePanel.RowHeight" Value="360"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="700" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="BrowsePanel.RowHeight" Value="300"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="500" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="BrowsePanel.RowHeight" Value="200"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="0" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="BrowsePanel.RowHeight" Value="150"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ScrollViewer Extensions:ScrollViewerOverflow.OverflowMargin="0,150,0,0">
                    <CommonControl:JustifiedWrapPanel x:Name="BrowsePanel" Margin="4" ItemsSource="{Binding SearchPosts}" ItemClick="BrowsePanel_ItemClick">
                        <CommonControl:JustifiedWrapPanel.ItemTemplate>
                            <DataTemplate x:DataType="m:Post">
                                <Grid BorderThickness="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                    <Border x:Name="Image" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="{ThemeResource SystemControlBackgroundBaseLowBrush}">
                                        <Image x:Name="PreviewImage" Stretch="UniformToFill" Source="{Binding PreviewUrl}" ImageOpened="Image_ImageOpened" HorizontalAlignment="Center" />
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </CommonControl:JustifiedWrapPanel.ItemTemplate>
                        <CommonControl:JustifiedWrapPanel.ItemContainerStyle>
                            <Style TargetType="ContentControl">
                                <Setter Property="Transitions">
                                    <Setter.Value>
                                        <TransitionCollection>
                                            <!--<AddDeleteThemeTransition/>-->
                                            <!--<EntranceThemeTransition/>-->
                                            <RepositionThemeTransition IsStaggeringEnabled="False"/>
                                        </TransitionCollection>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </CommonControl:JustifiedWrapPanel.ItemContainerStyle>
                    </CommonControl:JustifiedWrapPanel>
                </ScrollViewer>
            </Grid>
        </UserControl>


        <cc:DropShadowPanel BlurRadius="20" Grid.RowSpan="1"
                                HorizontalAlignment="Stretch"  HorizontalContentAlignment="Stretch"
                                  ShadowOpacity="1"
                                  OffsetX="0"
                                  OffsetY="0"
                                  Color="{ThemeResource SystemBaseMediumHighColor}">
            <CommandBar HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                IsDynamicOverflowEnabled="False" DefaultLabelPosition="Right" 
                        Background="{ThemeResource SystemChromeLowColor}" 
                                >
                <CommandBar.Content>
                    <Grid HorizontalAlignment="Stretch" Padding="4">
                        <AutoSuggestBox x:Uid="/BooruHomePage/AutoSuggestBoxSearch" x:Name="SearchBox" HorizontalAlignment="Stretch"
                                                    QuerySubmitted="SearchBox_QuerySubmitted" 
                                                    QueryIcon="Find" 
                                                    TextChanged="SearchBox_TextChanged" BorderThickness="1"
                                                    VerticalAlignment="Center"
                                                    FontSize="18" VerticalContentAlignment="Center"
                                                    PlaceholderText="Search for tags"
                                                    Loaded="SearchBox_Loaded" Unloaded="SearchBox_Unloaded">
                            <AutoSuggestBox.TextBoxStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource AutoSuggestBoxTextBoxStyle}">
                                    <Setter Property="Background" Value="Transparent"/>
                                </Style>
                            </AutoSuggestBox.TextBoxStyle>
                            <AutoSuggestBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Padding="8" Orientation="Horizontal" Margin="0,4">
                                        <StackPanel.Background>
                                            <SolidColorBrush Color="{Binding Type, Converter={StaticResource TagTypeColorConverter}}"/>
                                        </StackPanel.Background>
                                        <SymbolIcon Symbol="{Binding Type, Converter={StaticResource TagTypeSymbolConverter}}"/>
                                        <TextBlock Text="{Binding Name}" Margin="8,0,0,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </AutoSuggestBox.ItemTemplate>
                        </AutoSuggestBox>
                        <Popup x:Name="ParentedPopup" HorizontalOffset="200" VerticalOffset="200" IsOpen="True">
                            <TextBlock Text="123"/>
                        </Popup>
                    </Grid>
                </CommandBar.Content>


                <AppBarButton x:Uid="/BooruHomePage/AppBarRefreshFilter" x:Name="FilterButton" Icon="Refresh" Label="Refresh" 
                                          AllowFocusOnInteraction ="True"
                                          Click="FilterButton_Click">
                </AppBarButton>

                <CommandBar.SecondaryCommands>





                  
                    <AppBarButton x:Name="RatingAppBarButton" Label="Rating" IsTapEnabled="False" AllowFocusOnInteraction="True">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE83D;"/>
                        </AppBarButton.Icon>
                        <AppBarButton.Flyout>
                            <Flyout FlyoutPresenterStyle="{StaticResource FlyoutFlyoutPresenterStyle1}" AllowFocusOnInteraction="True" >
                                <StackPanel Width="300" Padding="12,0,12,12" DataContext="{Binding SearchPostFilter}">
                                    <ToggleSwitch x:Uid="/BooruHomePage/ToggleSwitchRatingSafe" Header="Safe" IsOn="{Binding IsFilterSafe, Mode=TwoWay}" 
                          IsEnabled="{Binding IsFilterSafeUnlocked}"/>
                                    <StackPanel Orientation="Vertical" Visibility="{Binding IsRatingFilterUnlocked, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource YandeSettings}}">
                                        <ToggleSwitch x:Uid="/BooruHomePage/ToggleSwitchRatingQuestionable" Header="Questionable" IsOn="{Binding IsFilterQuestionable, Mode=TwoWay}" 
                          IsEnabled="{Binding IsFilterQuestionableUnlocked}"/>
                                        <ToggleSwitch x:Uid="/BooruHomePage/ToggleSwitchRatingExplicit" Header="Explicit" IsOn="{Binding IsFilterExplicit, Mode=TwoWay}"
                          IsEnabled="{Binding IsFilterExplicitUnlocked}"/>
                                    </StackPanel>
                                    <TextBlock x:Uid="/BooruHomePage/TextBlockRating" TextWrapping="Wrap" Visibility="{Binding IsRatingFilterUnlocked, Converter={StaticResource BooleanToInvisibilityConverter}, Source={StaticResource YandeSettings}}"/>
                                </StackPanel>
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>


                    <AppBarButton Label="Aspect Ratio" IsTapEnabled="False" AllowFocusOnInteraction="True">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE799;"/>
                        </AppBarButton.Icon>

                        <AppBarButton.Flyout>
                            <Flyout FlyoutPresenterStyle="{StaticResource FlyoutFlyoutPresenterStyle1}" AllowFocusOnInteraction="True" >
                                <StackPanel Width="300" Padding="12,0,12,12" DataContext="{Binding SearchPostFilter}">
                                    <ToggleSwitch x:Uid="/BooruHomePage/ToggleSwitchRatioHorizontal" Header="Horizontal" IsOn="{Binding IsFilterHorizontal, Mode=TwoWay}" 
                          IsEnabled="{Binding IsFilterHorizontalUnlocked}"/>
                                    <ToggleSwitch x:Uid="/BooruHomePage/ToggleSwitchRatioVertical" Header="Vertical" IsOn="{Binding IsFilterVertical, Mode=TwoWay}"
                          IsEnabled="{Binding IsFilterVerticalUnlocked}"/>
                                    <TextBlock x:Uid="/BooruHomePage/TextBlockRatioSquare" Text="p.s. Square images are treated as horizontal." TextWrapping="Wrap"/>
                                </StackPanel>
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>


                    <AppBarButton Label="Hidden Images" IsTapEnabled="False" AllowFocusOnInteraction="True">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE8FF;"/>
                        </AppBarButton.Icon>
                        <AppBarButton.Flyout>
                            <Flyout FlyoutPresenterStyle="{StaticResource FlyoutFlyoutPresenterStyle1}" AllowFocusOnInteraction="True" >
                                <StackPanel Width="300" Padding="12,0,12,12" DataContext="{Binding SearchPostFilter}">
                                    <ToggleSwitch x:Uid="/BooruHomePage/ToggleSwitchAllowHidden" Header="顯示被隱藏的圖片" IsOn="{Binding IsFilterAllowHidden, Mode=TwoWay}"/>
                                    <TextBlock x:Uid="/BooruHomePage/TextBlockAllowHidden" Text="一般以文字為主的圖片都會被預設隱藏。" TextWrapping="Wrap"/>

                                    <ToggleSwitch x:Uid="/BooruHomePage/ToggleSwitchAllowHeld" Header="顯示被攔截的圖片" Margin="0,48,0,0" IsOn="{Binding IsFilterAllowHeld, Mode=TwoWay}"/>
                                    <TextBlock x:Uid="/BooruHomePage/TextBlockAllowHeld" Text="一些剛上傳但未被標籤的圖片都會可能會暫時被攔截。您可以選擇提前看到這些新圖，但黑名單可能對它們沒有效果。" TextWrapping="Wrap"/>
                                </StackPanel>
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>



                    <AppBarButton Label="Blacklist" IsTapEnabled="False" AllowFocusOnInteraction="True">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xF140;"/>
                        </AppBarButton.Icon>
                        <AppBarButton.Flyout>
                            <Flyout FlyoutPresenterStyle="{StaticResource FlyoutFlyoutPresenterStyle1}" AllowFocusOnInteraction="True" >
                                <StackPanel Width="300" Padding="12,0,12,12" DataContext="{Binding SearchPostFilter}">
                                    <TextBox x:Uid="/BooruHomePage/TextBoxBlacklist" Header="黑名單標籤" Height="200" TextWrapping="Wrap" Text="{Binding TagBlacklist, Mode=TwoWay}"/>
                                    <TextBlock x:Uid="/BooruHomePage/TextBlockBlacklist" Text="所有包含黑名單標籤的貼圖將被隱藏，用空格分隔標籤。注意此黑名單不會與您yandere帳號的網頁版設置同步。" TextWrapping="Wrap"/>
                                </StackPanel>
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarButton  Label="{Binding SearchPosts.Source.TotalCount, Converter={StaticResource StringFormatConverter}, ConverterParameter='Total: {0}'}" IsEnabled="False"/>
                    <AppBarButton  Label="{Binding SearchPosts.Source.Count, Converter={StaticResource StringFormatConverter}, ConverterParameter='Loaded: {0}'}" IsEnabled="False"/>
                    <AppBarButton  Label="{Binding SearchPosts.Count, Converter={StaticResource StringFormatConverter}, ConverterParameter='Filtered: {0}'}" IsEnabled="False"/>


                    
                    <AppBarSeparator/>
                    <AppBarElementContainer>
                        <AppBarElementContainer.Resources>
                            <!-- Override default brushes to make the Buttons 
                     match other command bar elements. -->
                            <SolidColorBrush x:Key="ButtonBackground"
                                 Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBackgroundPressed"
                                 Color="{ThemeResource SystemListMediumColor}"/>
                            <SolidColorBrush x:Key="ButtonBackgroundPointerOver"
                                 Color="{ThemeResource SystemListLowColor}"/>
                            <SolidColorBrush x:Key="ButtonBorderBrush"
                                 Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBorderBrushPointerOver"
                                 Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBorderBrushChecked"
                                 Color="Transparent"/>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                            <Style TargetType="Button">
                                <Setter Property="Height" Value="40"/>
                                <Setter Property="Width" Value="40"/>
                            </Style>
                        </AppBarElementContainer.Resources>
                        <Grid Margin="12,-4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="76"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox Width="16" Height="16" Margin="0,2,0,0">
                                <SymbolIcon Symbol="Zoom"/>
                            </Viewbox>
                            <TextBlock Text="Zoom" Margin="10,0,0,0" Grid.Column="1"/>
                            <StackPanel Orientation="Horizontal" Grid.Column="2">
                                <Button ToolTipService.ToolTip="Zoom out">
                                    <Viewbox Width="16" Height="16">
                                        <SymbolIcon Symbol="ZoomOut"/>
                                    </Viewbox>
                                </Button>
                                <TextBlock Text="50%" Width="40"
                               HorizontalTextAlignment="Center"/>
                                <Button ToolTipService.ToolTip="Zoom in">
                                    <Viewbox Width="16" Height="16">
                                        <SymbolIcon Symbol="ZoomIn"/>
                                    </Viewbox>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </AppBarElementContainer>
                </CommandBar.SecondaryCommands>
            </CommandBar>
        </cc:DropShadowPanel>
    </Grid>
</UserControl>
