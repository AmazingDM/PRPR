<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PRPR.Common.Views.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Converters="using:PRPR.Common.Converters"
    x:Class="PRPR.Common.Views.Controls.ImageWall"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    Padding="6,0" 
    x:Name="Wall"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    HorizontalAlignment="Stretch"
    Loaded="Wall_Loaded"
    >




    <UserControl.Resources>
        <Converters:RandomGrayConverter x:Key="RandomGrayConverter"/>
        
        <Style x:Key="ListViewItemStyleNoBackground" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}"/>
            <Setter Property="FocusVisualPrimaryThickness" Value="2"/>
            <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}"/>
            <Setter Property="FocusVisualSecondaryThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter CheckBrush="{ThemeResource ListViewItemCheckBrush}" ContentMargin="{TemplateBinding Padding}" CheckMode="{ThemeResource ListViewItemCheckMode}" ContentTransitions="{TemplateBinding ContentTransitions}" CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" DragForeground="{ThemeResource ListViewItemDragForeground}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackground}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}" FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}" FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}" FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Control.IsTemplateFocusTarget="True" PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" PressedBackground="Transparent" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" PointerOverBackground="Transparent" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}" SelectedBackground="Transparent" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl x:Name="BaseGrid">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Padding1280">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1280" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Wall.Padding" Value="48,0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Padding600">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Wall.Padding" Value="24,0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Padding400">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="400" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Wall.Padding" Value="12,0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState  x:Name="Padding0">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Wall.Padding" Value="4,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <ListView x:Name="RowsListView" Background="{Binding Background, ElementName=Wall}"
                  DataContextChanged="UserControl_DataContextChanged"
                  ItemsSource="{Binding }" SelectionMode="None"
                  HorizontalAlignment="Stretch"
                  IsItemClickEnabled="False"
                  Margin="0,0" Padding="{Binding Padding, ElementName=Wall}"
                  ShowsScrollingPlaceholders="False" IsRightTapEnabled="False" 
                  SizeChanged="RowsListView_SizeChanged"
                  IsDoubleTapEnabled="False"
                  IsHoldingEnabled="False"
                  IsTapEnabled="False">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.Header>
                <Rectangle Margin="4"/>
            </ListView.Header>


            <ListView.Footer>
                <Grid Height="2000" Visibility="{Binding HasMoreItems, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </ListView.Footer>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <ListView x:Name="InnerListView" ItemsSource="{Binding }"
                           ScrollViewer.HorizontalScrollMode="Disabled" 
                           ScrollViewer.VerticalScrollMode="Disabled" 
                           ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                           SelectionMode="None"
                           Width="{Binding MaxRowWidth}" Height="{Binding RowHeight}"
                           IsItemClickEnabled="True" 
                           ItemClick="ListView_ItemClick"
                           ItemContainerStyle="{StaticResource ListViewItemStyleNoBackground}" 
                           ItemTemplate="{Binding Path=ItemTemplate, ElementName=Wall}"
                           >
                        
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </UserControl>
</UserControl>
