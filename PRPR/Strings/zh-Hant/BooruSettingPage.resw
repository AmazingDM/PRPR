<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonChangePath.Content" xml:space="preserve">
    <value>更改路徑</value>
  </data>
  <data name="ButtonManualUpdate.Content" xml:space="preserve">
    <value>手動刷新</value>
  </data>
  <data name="ButtonResetTile.Content" xml:space="preserve">
    <value>重設</value>
  </data>
  <data name="CheckBoxMeteredNetwork.Content" xml:space="preserve">
    <value>在付費網絡下也自動刷新</value>
  </data>
  <data name="ComboBoxCropMethod.Header" xml:space="preserve">
    <value>自動剪裁</value>
  </data>
  <data name="ComboBoxItemCropCenter.Content" xml:space="preserve">
    <value>置中</value>
  </data>
  <data name="ComboBoxItemCropCenter.Tag" xml:space="preserve">
    <value>原圖太高時去掉上下兩側；原圖太寬時去掉左右兩側。適用於純風景圖標籤(例如landscape)</value>
  </data>
  <data name="ComboBoxItemCropDisabled.Content" xml:space="preserve">
    <value>無剪裁</value>
  </data>
  <data name="ComboBoxItemCropDisabled.Tag" xml:space="preserve">
    <value>應用不預先剪裁原圖並由系統決定顯示效果。適合經常旋轉屏幕的平板用戶。也適合同時使用不同長闊比的多屏台式機用戶</value>
  </data>
  <data name="ComboBoxItemCropLargestFace.Content" xml:space="preserve">
    <value>最大的臉</value>
  </data>
  <data name="ComboBoxItemCropLargestFace.Tag" xml:space="preserve">
    <value>剪裁時盡量環繞圖中最大臉蛋。辨識不到動漫臉蛋時等於頂部置中。適用於人物標籤(例如aisaka_taiga)</value>
  </data>
  <data name="ComboBoxItemCropMostFaces.Content" xml:space="preserve">
    <value>最多的臉</value>
  </data>
  <data name="ComboBoxItemCropMostFaces.Tag" xml:space="preserve">
    <value>剪裁時盡量保留圖中最多臉蛋，避免合照時出現臉蛋被剪去一半的情況。辨識不到動漫臉蛋時等於頂部置中。適用於動漫作品標籤(例如k-on!)</value>
  </data>
  <data name="ComboBoxItemCropTopCenter.Content" xml:space="preserve">
    <value>頂部置中</value>
  </data>
  <data name="ComboBoxItemCropTopCenter.Tag" xml:space="preserve">
    <value>原圖太高時去掉底部；原圖太寬時去掉左右兩側。適用於臉蛋辨識經常認錯東西的場合(例如bikini)</value>
  </data>
  <data name="ComboBoxItemImageQualityHigh.Content" xml:space="preserve">
    <value>高</value>
  </data>
  <data name="ComboBoxItemImageQualityMedium.Content" xml:space="preserve">
    <value>中</value>
  </data>
  <data name="ComboBoxQuality.Header" xml:space="preserve">
    <value>圖片質量</value>
  </data>
  <data name="ComboBoxTheme.Header" xml:space="preserve">
    <value>應用主題</value>
  </data>
  <data name="TextBlockExperimental.Text" xml:space="preserve">
    <value>此設置仍處於測驗階段。 它可能未經完整測試。如有更改，恕不另行通知。 使用此實驗性功能可能會導致應用程序意外行為和閃退。 最壞情況下可能需要重新安裝應用。</value>
  </data>
  <data name="TextBlockFilter.Text" xml:space="preserve">
    <value>過濾</value>
  </data>
  <data name="TextBlockLiveTileIcons.Text" xml:space="preserve">
    <value>磁貼動態動漫頭像</value>
  </data>
  <data name="TextBlockMinute.Text" xml:space="preserve">
    <value>分鐘</value>
  </data>
  <data name="TextBlockRandom.Text" xml:space="preserve">
    <value>如果您要搜的標籤經常沒有新圖片上傳，您可以選擇隨機洗牌最新的數張圖，這樣不至於長期無法自動更換壁紙</value>
  </data>
  <data name="TextBlockRandomFirst.Text" xml:space="preserve">
    <value>隨機選取</value>
  </data>
  <data name="TextBlockRandomResults.Text" xml:space="preserve">
    <value>個搜索結果</value>
  </data>
  <data name="TextBlockRecords.Text" xml:space="preserve">
    <value>紀錄</value>
  </data>
  <data name="TextBlockSite.Text" xml:space="preserve">
    <value>更改主站：它會把你登出目前的主站、清除你的牆紙/鎖屏記錄，然後自動重啟應用並套用新的圖源網站。請注意，konachan只有橫向貼圖，請勿使用本地長寬比過濾器來查找直向貼圖。</value>
  </data>
  <data name="TextBlockTheme.Text" xml:space="preserve">
    <value>更改主題設置後需要重啟應用才會生效</value>
  </data>
  <data name="TextBlockThemeDark.Text" xml:space="preserve">
    <value>暗</value>
  </data>
  <data name="TextBlockThemeDefault.Text" xml:space="preserve">
    <value>由系統決定</value>
  </data>
  <data name="TextBlockThemeLight.Text" xml:space="preserve">
    <value>亮</value>
  </data>
  <data name="TextBlockUpdateInterval.Text" xml:space="preserve">
    <value>換圖間隔</value>
  </data>
  <data name="TextBoxTags.Header" xml:space="preserve">
    <value>搜索標籤</value>
  </data>
  <data name="ToggleSwitchAutoLiveTile.Header" xml:space="preserve">
    <value>後台定期自動刷新磁貼</value>
  </data>
  <data name="ToggleSwitchAutoLockScreen.Header" xml:space="preserve">
    <value>後台定期自動刷新鎖屏</value>
  </data>
  <data name="ToggleSwitchDownloadPath.Header" xml:space="preserve">
    <value>下載時使用指定路徑</value>
  </data>
</root>